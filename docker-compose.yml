

services:
  zebra-print:
    build: 
      context: .
      dockerfile: Dockerfile.alpine
    container_name: zebra-print-control
    restart: unless-stopped
    
    # USB printer access - full device access
    privileged: true
    network_mode: host  # Use host networking for better USB access
    devices:
      - /dev/bus/usb:/dev/bus/usb
    
    # Network ports (using host networking, so no port mapping needed)
    
    # Volumes for persistence and device access
    volumes:
      - zebra_data:/app/data
      - zebra_logs:/var/log/zebra-print
      - /dev:/dev  # Full device access (not read-only)
      - /run/udev:/run/udev:ro  # udev access for device detection
      - ./:/workspace:ro  # Mount source for development access
    
    # Environment variables - loaded from .env file
    env_file: .env
    environment:
      - ZEBRA_API_HOST=${ZEBRA_API_HOST:-0.0.0.0}
      - ZEBRA_API_PORT=${ZEBRA_API_PORT:-5000}
      - ZEBRA_PRINTER_NAME=${ZEBRA_PRINTER_NAME:-ZTC-ZD230-203dpi-ZPL}
      - ZEBRA_DB_PATH=/app/data/zebra_print.db
      - ZEBRA_API_TOKEN=${ZEBRA_API_TOKEN}
      - ZEBRA_DOMAIN=${ZEBRA_DOMAIN}
      - ZEBRA_TUNNEL_TYPE=${ZEBRA_TUNNEL_TYPE}
      - TZ=${TZ:-UTC}
      - PYTHONPATH=/app
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Labels for easier management
    labels:
      - "project=zebra-print"
      - "service=api"

volumes:
  zebra_data:
    driver: local
  zebra_logs:
    driver: local

# For easier management
networks:
  default:
    name: zebra-print-network