FROM alpine:3.18

# Install system dependencies with networking tools
RUN apk add --no-cache \
    python3 \
    py3-pip \
    cups \
    cups-client \
    curl \
    bash \
    supervisor \
    net-tools \
    && rm -rf /var/cache/apk/*

# Install Cloudflare tunnel (Alpine version)
RUN wget -O cloudflared https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 \
    && chmod +x cloudflared \
    && mv cloudflared /usr/local/bin/

# Create app directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /var/log/zebra-print /app/data \
    && chmod +x zebra_control_v2.py

# Configure CUPS
RUN adduser root lpadmin

# Create supervisor configuration with smart port handling
COPY docker/supervisord.conf /etc/supervisor/supervisord.conf
COPY docker/supervisor-smart.conf /etc/supervisor/conf.d/zebra-print.conf

# Create smart entrypoint and auto-setup
COPY docker/entrypoint-smart.sh /entrypoint.sh
COPY docker/auto-printer-setup.sh /app/docker/auto-printer-setup.sh
RUN chmod +x /entrypoint.sh /app/docker/auto-printer-setup.sh

# Expose default ports (will be dynamic if conflicts)
EXPOSE 5000 631

# Environment variables (can be overridden)
ENV ZEBRA_BASE_DIR=/app \
    ZEBRA_API_HOST=0.0.0.0 \
    ZEBRA_API_PORT=5000 \
    ZEBRA_DB_PATH=/app/data/zebra_print.db

# Health check with dynamic port support
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:${ZEBRA_API_PORT}/health || exit 1

ENTRYPOINT ["/entrypoint.sh"]
CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf", "-n"]